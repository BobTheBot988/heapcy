name: Build wheels

on:
  push:
    tags:
      - "v*" # Run on version tags
  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install cibuildwheel
        run: python -m pip install -U pip cibuildwheel
      #Implement qemu for ubuntu
      - name: Show planned builds (from TOML)
        run: python -m cibuildwheel --print-build-identifiers

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl
          if-no-files-found: error

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error

  publish:
    concurrency:
      group: publish-${{ github.ref }}
      cancel-in-progress: false

    needs: [build_wheels, sdist]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write # OIDC for Trusted Publishing
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
          merge-multiple: true

        # optional but super helpful when debugging
      - name: List dist contents
        run: |
          ls -l dist
             find dist -maxdepth 1 -type f \( -name '*.whl' -o -name '*.tar.gz' \) -print

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          attestations: true
